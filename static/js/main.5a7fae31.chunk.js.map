{"version":3,"sources":["components/Button/Button.js","components/MonthList/MonthList.js","components/MonthList/monthColor.js","components/UsersContent/currentUsers.js","components/UsersContent/UsersContent.js","api/api.js","components/UsersList/UsersList.js","App.js","index.js"],"names":["Button","getUsersList","isLoading","className","type","onClick","months","MonthList","usersList","onCurrentMonth","onToggleUsers","showCurrentMonth","event","month","target","textContent","hideCurrentMonth","map","bornThisMonth","data","number","length","filter","user","dob","slice","getMonthColor","monthClassName","grey","blue","green","red","value","onMouseEnter","onMouseOut","onBlur","key","uuid","href","defaultProps","UsersContent","listToShow","getCurrentUsers","currentMonth","id","firstName","lastName","getData","a","fetch","then","respond","json","UsersList","useState","setUserList","setIsLoading","setCurrentMonth","isUsersShown","setIsUsersShown","isShown","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a7fae31.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css';\n\nexport const Button = ({ getUsersList, isLoading }) => (\n  <div className=\"center\">\n    <button\n      className=\"btn btn-success\"\n      type=\"button\"\n      onClick={getUsersList}\n    >\n      Download data\n    </button>\n    {isLoading && <h1 className=\"loading\">Is loading...</h1>}\n  </div>\n\n);\n\nButton.propTypes = {\n  getUsersList: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { uuid } from 'uuidv4';\nimport className from 'classnames';\nimport { getMonthColor } from './monthColor';\nimport './MonthList.css';\n\nconst months = ['January', 'February', 'March', 'April', 'May',\n  'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nexport const MonthList = ({ usersList, onCurrentMonth, onToggleUsers }) => {\n  const showCurrentMonth = (event) => {\n    const month = event.target.textContent;\n\n    onCurrentMonth(month);\n    onToggleUsers(true);\n  };\n\n  const hideCurrentMonth = () => {\n    onCurrentMonth('');\n    onToggleUsers(false);\n  };\n\n  return (\n    <ul className=\"nav nav-tabs\">\n      {months.map((month) => {\n        const bornThisMonth = getMonthColor(month, usersList);\n        const monthClassName = className('nav-link',\n          { grey: (bornThisMonth < 3) },\n          { blue: (bornThisMonth >= 3 && bornThisMonth < 7) },\n          { green: (bornThisMonth >= 7 && bornThisMonth < 11) },\n          { red: (bornThisMonth >= 11) });\n\n        return (\n          <li\n            value={month}\n            className=\"nav-item\"\n            onMouseEnter={showCurrentMonth}\n            onMouseOut={hideCurrentMonth}\n            onBlur={hideCurrentMonth}\n            key={uuid()}\n          >\n            <a\n              className={monthClassName}\n              href=\"/\"\n            >\n              {month}\n            </a>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nconst UserList = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  firstName: PropTypes.string.isRequired,\n  lastName: PropTypes.string.isRequired,\n  dob: PropTypes.string.isRequired,\n});\n\nMonthList.propTypes = {\n  usersList: PropTypes.arrayOf(\n    UserList,\n  ),\n  onCurrentMonth: PropTypes.func.isRequired,\n  onToggleUsers: PropTypes.func.isRequired,\n};\n\nMonthList.defaultProps = {\n  usersList: [],\n};\n","export const getMonthColor = (month, data) => {\n  let number = 0;\n\n  if (data.length) {\n    switch (month) {\n      case 'January':\n        number = data.filter(user => user.dob.slice(5, 7) === '01').length;\n        break;\n      case 'February':\n        number = data.filter(user => user.dob.slice(5, 7) === '02').length;\n        break;\n      case 'March':\n        number = data.filter(user => user.dob.slice(5, 7) === '03').length;\n        break;\n      case 'April':\n        number = data.filter(user => user.dob.slice(5, 7) === '04').length;\n        break;\n      case 'May':\n        number = data.filter(user => user.dob.slice(5, 7) === '05').length;\n        break;\n      case 'June':\n        number = data.filter(user => user.dob.slice(5, 7) === '06').length;\n        break;\n      case 'July':\n        number = data.filter(user => user.dob.slice(5, 7) === '07').length;\n        break;\n      case 'August':\n        number = data.filter(user => user.dob.slice(5, 7) === '08').length;\n        break;\n      case 'September':\n        number = data.filter(user => user.dob.slice(5, 7) === '09').length;\n        break;\n      case 'October':\n        number = data.filter(user => user.dob.slice(5, 7) === '10').length;\n        break;\n      case 'November':\n        number = data.filter(user => user.dob.slice(5, 7) === '11').length;\n        break;\n      case 'December':\n        number = data.filter(user => user.dob.slice(5, 7) === '12').length;\n        break;\n      default:\n        number = 0;\n    }\n  }\n\n  return number;\n};\n","export const getCurrentUsers = (month, data) => {\n  switch (month) {\n    case 'January':\n      return data.filter(user => user.dob.slice(5, 7) === '01');\n    case 'February':\n      return data.filter(user => user.dob.slice(5, 7) === '02');\n    case 'March':\n      return data.filter(user => user.dob.slice(5, 7) === '03');\n    case 'April':\n      return data.filter(user => user.dob.slice(5, 7) === '04');\n    case 'May':\n      return data.filter(user => user.dob.slice(5, 7) === '05');\n    case 'June':\n      return data.filter(user => user.dob.slice(5, 7) === '06');\n    case 'July':\n      return data.filter(user => user.dob.slice(5, 7) === '07');\n    case 'August':\n      return data.filter(user => user.dob.slice(5, 7) === '08');\n    case 'September':\n      return data.filter(user => user.dob.slice(5, 7) === '09');\n    case 'October':\n      return data.filter(user => user.dob.slice(5, 7) === '10');\n    case 'November':\n      return data.filter(user => user.dob.slice(5, 7) === '11');\n    case 'December':\n      return data.filter(user => user.dob.slice(5, 7) === '12');\n    default:\n      return data;\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getCurrentUsers } from './currentUsers';\nimport './UsersContent.css';\n\nexport const UsersContent = ({ usersList, currentMonth }) => {\n  const listToShow = getCurrentUsers(currentMonth, usersList);\n\n  return (\n    <ul className=\"list-group\">\n      {listToShow.map(user => (\n        <li\n          className=\"list-group-item\"\n          key={user.id}\n        >\n          {`${user.firstName} ${user.lastName}`}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst UserList = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  firstName: PropTypes.string.isRequired,\n  lastName: PropTypes.string.isRequired,\n  dob: PropTypes.string.isRequired,\n});\n\nUsersContent.propTypes = {\n  usersList: PropTypes.arrayOf(\n    UserList,\n  ),\n  currentMonth: PropTypes.string,\n};\n\nUsersContent.defaultProps = {\n  usersList: [],\n  currentMonth: '',\n};\n","// import { PeopleListInterface, Person } from '../interfaces';\n\nconst URL = 'https://yalantis-react-school-api.yalantis.com/api/task0/users';\n\nexport const getData = async() => {\n  const data = await fetch(URL).then(respond => respond.json());\n\n  return data;\n};\n","import React, { useState } from 'react';\nimport { Button } from '../Button/Button';\nimport { MonthList } from '../MonthList/MonthList';\nimport { UsersContent } from '../UsersContent/UsersContent';\nimport { getData } from '../../api/api';\n\nimport './UsersList.css';\n\nexport const UsersList = () => {\n  const [usersList, setUserList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentMonth, setCurrentMonth] = useState('');\n  const [isUsersShown, setIsUsersShown] = useState(false);\n\n  const getUsersList = async() => {\n    setIsLoading(true);\n    await getData().then(data => setUserList(data));\n    setIsLoading(false);\n  };\n\n  const getCurrentMonth = (month) => {\n    setCurrentMonth(month);\n  };\n\n  const toggleUsers = (isShown) => {\n    setIsUsersShown(isShown);\n  };\n\n  return (\n    <>\n      <Button\n        getUsersList={getUsersList}\n        isLoading={isLoading}\n      />\n      <MonthList\n        usersList={usersList}\n        onCurrentMonth={getCurrentMonth}\n        onToggleUsers={toggleUsers}\n      />\n      {isUsersShown\n        && <UsersContent usersList={usersList} currentMonth={currentMonth} />\n      }\n    </>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { UsersList } from './components/UsersList/UsersList';\n\n// const Months = ['January', 'February', 'March', 'April', 'May',\n//   'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nfunction App() {\n  return (\n    <UsersList />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}